"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[927],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),y=a,m=d["".concat(s,".").concat(y)]||d[y]||p[y]||o;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1527:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"Architecture",sidebar_position:3},i="Architecture",c={unversionedId:"architecture",id:"architecture",title:"Architecture",description:"Nango Architecture",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/architecture",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/architecture.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Architecture",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Quickstart \ud83d\ude80",permalink:"/quickstart"},next:{title:"Adding a Sync",permalink:"/add-sync"}},s={},u=[{value:"Overview of Nango",id:"overview-of-nango",level:2},{value:"Syncs: How Nango moves your data",id:"syncs-how-nango-moves-your-data",level:2}],l={toc:u};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:n(1435).Z},(0,a.kt)("img",{alt:"Nango Architecture",src:n(2644).Z,width:"1573",height:"534"}))),(0,a.kt)("h2",{id:"overview-of-nango"},"Overview of Nango"),(0,a.kt)("p",null,"Nango runs as a cloud service or a group of self-hosted docker containers (see ",(0,a.kt)("a",{parentName:"p",href:"/production-deployment"},"deploying Nango to production"),")."),(0,a.kt)("p",null,"The main way you interact with Nango from your application is the Nango SDK or REST API: With these APIs you can create new Syncs, query the status of Syncs, remove Syncs or (in the future) subscribe to updates from Syncs."),(0,a.kt)("p",null,"Once you added a Sync to Nango it takes care of all the annoying details for you to sync the data out to your local database:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nango performs full refreshes on first sync"),(0,a.kt)("li",{parentName:"ul"},"Nango performs periodic incremental refreshes"),(0,a.kt)("li",{parentName:"ul"},"Nango de-duplicates the data and upserts (update existing record or insert a new one) it for you into the existing table(s) as needed"),(0,a.kt)("li",{parentName:"ul"},"Nango monitors the sync jobs and automatically restarts jobs that are stuck, handles rate-limits etc."),(0,a.kt)("li",{parentName:"ul"},"Nango alerts you if something goes wrong that requires your attention, e.g. major schema changes, unfixable authentication errors etc.")),(0,a.kt)("h2",{id:"syncs-how-nango-moves-your-data"},"Syncs: How Nango moves your data"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syncs")," are the main objects in Nango: ",(0,a.kt)("strong",{parentName:"p"},"They represent a continuous job for Nango to pull data from an external API and sync it to your database"),"."),(0,a.kt)("p",null,"Here are some quick facts about Syncs:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You ",(0,a.kt)("a",{parentName:"li",href:"/add-sync"},"create Syncs")," from your application's code using the Nango SDK or the Nango REST API"),(0,a.kt)("li",{parentName:"ul"},"Syncs write the data they pull in directly to a database & table of your choosing"),(0,a.kt)("li",{parentName:"ul"},"You can have as many Syncs as you want"),(0,a.kt)("li",{parentName:"ul"},"You can think of Syncs as HTTP requests that are continuously run to get the latest data",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This means every time you change something in the request parameters you should add it as a new Sync to Nango"),(0,a.kt)("li",{parentName:"ul"},"The most common case for this are different authentication credentials (for different users)"))),(0,a.kt)("li",{parentName:"ul"},"Syncs are smart and can deal with paginated data, authentication etc."),(0,a.kt)("li",{parentName:"ul"},"You can manage your existing Syncs through the Nango SDK, REST API or our CLI (coming soon)")),(0,a.kt)("p",null,"For a full list of a Syncs attributes and how to add one please check our ",(0,a.kt)("a",{parentName:"p",href:"/add-sync"},"Adding a Sync")," guide."))}p.isMDXComponent=!0},1435:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/nango-architecture-10e4dd3a1feed7eb7029444a2e7bbe99.png"},2644:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/nango-architecture-10e4dd3a1feed7eb7029444a2e7bbe99.png"}}]);