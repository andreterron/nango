"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[988],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),y=r,f=d["".concat(p,".").concat(y)]||d[y]||s[y]||o;return n?i.createElement(f,a(a({ref:t},u),{},{components:n})):i.createElement(f,a({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const o={},a="CLI",l={unversionedId:"pizzly/pizzly-cli",id:"pizzly/pizzly-cli",title:"CLI",description:"You can manage your Provider Configurations & Connections using the Pizzly CLI.",source:"@site/docs/pizzly/pizzly-cli.md",sourceDirName:"pizzly",slug:"/pizzly/pizzly-cli",permalink:"/pizzly/pizzly-cli",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/pizzly/pizzly-cli.md",tags:[],version:"current",frontMatter:{},sidebar:"pizzly",previous:{title:"Other configuration",permalink:"/pizzly/pizzly-configuration"},next:{title:"Contribute a new API",permalink:"/pizzly/contribute-api"}},p={},c=[{value:"Set up the Pizzly host",id:"set-up-the-pizzly-host",level:2},{value:"Manage Provider Configurations",id:"manage-provider-configurations",level:2},{value:"List",id:"list",level:3},{value:"Get",id:"get",level:3},{value:"Create",id:"create",level:3},{value:"Edit",id:"edit",level:3},{value:"Delete",id:"delete",level:3},{value:"Manage Connections",id:"manage-connections",level:2},{value:"Get",id:"get-1",level:3}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cli"},"CLI"),(0,r.kt)("p",null,"You can manage your Provider Configurations & Connections using the Pizzly CLI. "),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly")," to get a list of all CLI commands."),(0,r.kt)("h2",{id:"set-up-the-pizzly-host"},"Set up the Pizzly host"),(0,r.kt)("p",null,"By default, The CLI uses the host/port ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3003")," to call the Pizzly server. You can customize this by setting the environment variable named ",(0,r.kt)("inlineCode",{parentName:"p"},"PIZZLY_HOSTPORT")," in your CLI environment, using a ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc")," or ",(0,r.kt)("inlineCode",{parentName:"p"},".zshrc")," file."),(0,r.kt)("h2",{id:"manage-provider-configurations"},"Manage Provider Configurations"),(0,r.kt)("h3",{id:"list"},"List"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly config:list")," to list all existing Provider Configurations."),(0,r.kt)("h3",{id:"get"},"Get"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly config:get <provider_config_key>")," to get a specific Provider Configurations."),(0,r.kt)("h3",{id:"create"},"Create"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly config:create <provider_config_key> <provider> <oauth_client_id> <oauth_client_secret> <oauth_scopes>")," to create a new Provider Configuration. If specifying multiple OAuth scopes in ",(0,r.kt)("inlineCode",{parentName:"p"},"<oauth_scopes>"),", they should be separated by commas (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"oauth,read"),")."),(0,r.kt)("h3",{id:"edit"},"Edit"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly config:edit <provider_config_key> <provider> <oauth_client_id> <oauth_client_secret> <oauth_scopes>")," to edit an existing Provider Configuration. If specifying multiple OAuth scopes in ",(0,r.kt)("inlineCode",{parentName:"p"},"<oauth_scopes>"),", they should be separated by commas (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"oauth,read"),")."),(0,r.kt)("h3",{id:"delete"},"Delete"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly config:delete <provider_config_key>")," to delete an existing Provider Configuration."),(0,r.kt)("h2",{id:"manage-connections"},"Manage Connections"),(0,r.kt)("h3",{id:"get-1"},"Get"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npx pizzly connection:get <connection_id>")," to get a Connection with credentials."))}s.isMDXComponent=!0}}]);