"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(n),d=a,m=g["".concat(s,".").concat(d)]||g[d]||u[d]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5304:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Create an Integration",sidebar_position:1},o="Create an Integration",l={unversionedId:"guides/create-an-integration",id:"guides/create-an-integration",title:"Create an Integration",description:"In a new terminal, navigate to the Nango Folder:",source:"@site/docs/guides/create-an-integration.md",sourceDirName:"guides",slug:"/guides/create-an-integration",permalink:"/guides/create-an-integration",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/guides/create-an-integration.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Create an Integration",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Guides",permalink:"/category/guides"},next:{title:"Create an Action",permalink:"/guides/create-an-action"}},s={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-an-integration"},"Create an Integration"),(0,a.kt)("p",null,"In a new terminal, navigate to the Nango Folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd <your-project-root>/nango-integrations\n")),(0,a.kt)("p",null,"Choose a name for your integration (e.g. 'slack', 'salesforce', etc.), here let's use ",(0,a.kt)("inlineCode",{parentName:"p"},"myintegration"),"."),(0,a.kt)("p",null,"Open the ",(0,a.kt)("inlineCode",{parentName:"p"},"integrations.yaml")," file and copy/paste the configuration for a new Integration under the ",(0,a.kt)("inlineCode",{parentName:"p"},"integrations")," key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="integrations.yaml"',title:'"integrations.yaml"'},"- myintegration:\n    base_url: https://myintegration.com/api/\n    call_auth:\n        mode: AUTH_HEADER_TOKEN\n    log_level: debug\n")),(0,a.kt)("p",null,"Let's briefly unwrap each of these fields (check the ",(0,a.kt)("a",{parentName:"p",href:"/reference/configuration#integrationsYaml"},"reference")," for details): "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"myintegration")," is the name of your integration in Nango, you will use this string to reference it everywhere"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"base_url")," is the 3rd-party API's base URL to be used for http requests"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"call_auth: mode:")," setting this to ",(0,a.kt)("inlineCode",{parentName:"li"},"AUTH_HEADER_TOKEN")," tells Nango to add a standard Bearer token to every HTTP header to authorize your requests"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"log_level")," indicates how verbose we want Nango's logs for this integration to be. ",(0,a.kt)("inlineCode",{parentName:"li"},"debug")," is best for development to have maximum visibility and will log, amongst other things, every HTTP request we make from the integration (cf. ",(0,a.kt)("a",{parentName:"li",href:"/reference/logging"},"log levels"),").")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"See the ",(0,a.kt)("a",{parentName:"p",href:"/quickstart/node##create-an-integration"},"Quickstart")," for a concrete example.")),(0,a.kt)("p",null,"Create a directory called ",(0,a.kt)("inlineCode",{parentName:"p"},"myintegration")," directly under the ",(0,a.kt)("inlineCode",{parentName:"p"},"nango-integrations")," folder to host the code for your new Integration. In the Nango Folder, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir myintegration\n")),(0,a.kt)("p",null,"Note that the Integration name in ",(0,a.kt)("inlineCode",{parentName:"p"},"integrations.yaml")," must match the Integration folder name, in order for the Nango server to correctly load this integration."))}u.isMDXComponent=!0}}]);