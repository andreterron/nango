"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[643],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"Create an Action",sidebar_position:2},o="Create an Action",c={unversionedId:"guides/create-an-action",id:"guides/create-an-action",title:"Create an Action",description:"Actions (cf. Architecture) contain the business logic that is specific to each integration. They can be customized at will.",source:"@site/docs/guides/create-an-action.md",sourceDirName:"guides",slug:"/guides/create-an-action",permalink:"/guides/create-an-action",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/guides/create-an-action.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Create an Action",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Create an Integration",permalink:"/guides/create-an-integration"},next:{title:"Trigger an Action",permalink:"/guides/trigger-an-action"}},s={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-an-action"},"Create an Action"),(0,r.kt)("p",null,"Actions (cf. ",(0,r.kt)("a",{parentName:"p",href:"/architecture"},"Architecture"),") contain the business logic that is specific to each integration. They can be customized at will. "),(0,r.kt)("p",null,"Let's assume you have a ",(0,r.kt)("inlineCode",{parentName:"p"},"myintegration")," Integration already configured (cf. ",(0,r.kt)("a",{parentName:"p",href:"/guides/create-an-integration"},"Create an Integration"),")."),(0,r.kt)("p",null,"Choose a name for your new Action, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"notify")," to send a message, ",(0,r.kt)("inlineCode",{parentName:"p"},"contacts")," to fetch CRM records, etc. In this case, let's use ",(0,r.kt)("inlineCode",{parentName:"p"},"myaction"),"."),(0,r.kt)("p",null,"Create a file for our new ",(0,r.kt)("inlineCode",{parentName:"p"},"myaction")," Action which lives in the ",(0,r.kt)("inlineCode",{parentName:"p"},"myintegration")," folder: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch myaction.action.ts\n")),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"myaction.action.ts")," file and paste the following scaffold into it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="myaction.action.ts"',title:'"myaction.action.ts"'},"import { NangoAction } from '@nangohq/action';\n\nclass MyIntegrationMyActionAction extends NangoAction {\n\n    override async executeAction(input: any) {\n        // Add your Action code here\n    }\n}\n\nexport { MyIntegrationMyActionAction };\n")),(0,r.kt)("p",null,"Note that every Action must follow the following naming patterns to the recognized by the Nango Server:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<action-name>.action.ts")," for the Action file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<IntegrationName><ActionName>Action")," for the Action class")),(0,r.kt)("p",null,"The business logic of the Action will be implemented in the ",(0,r.kt)("inlineCode",{parentName:"p"},"executeAction")," method."),(0,r.kt)("p",null,"Nango provides us with some helpers that we can (and should) use in our Action:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For HTTP requests, use the built-in ",(0,r.kt)("inlineCode",{parentName:"li"},"this.httpRequest")," method (cf. ",(0,r.kt)("a",{parentName:"li",href:"/reference/actions#httpRequest"},"reference"),"), which takes care of auth parameters, retries,  etc."),(0,r.kt)("li",{parentName:"ul"},"For logging, use the built-in logger ",(0,r.kt)("inlineCode",{parentName:"li"},"this.logger")," (cf. ",(0,r.kt)("a",{parentName:"li",href:"/reference/logging"},"reference"),")")),(0,r.kt)("p",null,"We can now easily write the logic for our ",(0,r.kt)("inlineCode",{parentName:"p"},"myaction")," Action:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="myaction.action.ts"',title:'"myaction.action.ts"'},"// Add this inside of executeAction\nconst requestBody = {\n    param1: x,\n    param2: y\n};\nconst response = await this.httpRequest('/<external-api-action-path>', 'POST', undefined, requestBody);\n\nreturn { status: response.status, statusText: response.statusText };\n")))}u.isMDXComponent=!0}}]);