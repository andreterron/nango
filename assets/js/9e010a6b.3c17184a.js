"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[979],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7294),a=t(6010);const o="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var r=t(7462),a=t(7294),o=t(6010),l=t(2389),s=t(7392),i=t(7094),c=t(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var n;const{lazy:t,block:l,defaultValue:d,values:m,groupId:f,className:y}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??b.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),g=(0,s.l)(h,((e,n)=>e.value===n.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===d?d:d??(null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)??b[0].props.value;if(null!==v&&!h.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:k}=(0,i.U)(),[O,N]=(0,a.useState)(v),j=[],{blockElementScrollPositionUntilNextRender:E}=(0,c.o5)();if(null!=f){const e=w[f];null!=e&&e!==O&&h.some((n=>n.value===e))&&N(e)}const T=e=>{const n=e.currentTarget,t=j.indexOf(n),r=h[t].value;r!==O&&(E(n),N(r),null!=f&&k(f,String(r)))},S=e=>{var n;let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const n=j.indexOf(e.currentTarget)+1;t=j[n]??j[0];break}case"ArrowLeft":{const n=j.indexOf(e.currentTarget)-1;t=j[n]??j[j.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},y)},h.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:e=>j.push(e),onKeyDown:S,onClick:T},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":O===n})}),t??n)}))),t?(0,a.cloneElement)(b.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==O})))))}function m(e){const n=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},6807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));t(5488),t(5162);const o={},l="Sync Modes",s={unversionedId:"nango-sync/sync-modes",id:"nango-sync/sync-modes",title:"Sync Modes",description:"Nango supports the following syncing modes:",source:"@site/docs/nango-sync/sync-modes.md",sourceDirName:"nango-sync",slug:"/nango-sync/sync-modes",permalink:"/nango-sync/sync-modes",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/nango-sync/sync-modes.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Create Syncs",permalink:"/nango-sync/sync-all-options"},next:{title:"Sync Scheduling",permalink:"/nango-sync/sync-schedule"}},i={},c=[],u={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sync-modes"},"Sync Modes"),(0,a.kt)("p",null,"Nango supports the following syncing modes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Full Refresh + Overwrite"),": on each job, read all the objects from the API, overwrite by first deleting existing rows"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Full Refresh + Upsert"),": on each job, read all the objects from the API, append new rows & update existing rows (see below)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Incremental + Upsert")," (coming soon): on each job, only read the new/updated objects from the API, append new rows & update existing rows")),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"Full Refresh + Overwrite")," mode is used by default. To use the ",(0,a.kt)("strong",{parentName:"p"},"Full Refresh + Upsert")," mode, provide a right value for the ",(0,a.kt)("inlineCode",{parentName:"p"},"unique_key")," field in the ",(0,a.kt)("a",{parentName:"p",href:"/nango-sync/sync-all-options"},"Sync config options"),", the value of which will be used to dedupe rows."),(0,a.kt)("p",null,"You can view your Sync configurations in the SQL table ",(0,a.kt)("inlineCode",{parentName:"p"},"_nango_syncs")," and your Sync jobs in ",(0,a.kt)("inlineCode",{parentName:"p"},"_nango_jobs"),"."))}p.isMDXComponent=!0}}]);