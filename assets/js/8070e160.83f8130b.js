"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[651],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),o=n(6010),l=n(2389),s=n(7392),i=n(7094),c=n(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:n,block:l,defaultValue:d,values:m,groupId:h,className:k}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,s.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===d?d:d??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,i.U)(),[N,O]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,c.o5)();if(null!=h){const e=v[h];null!=e&&e!==N&&f.some((t=>t.value===e))&&O(e)}const P=e=>{const t=e.currentTarget,n=T.indexOf(t),a=f[n].value;a!==N&&(E(t),O(a),null!=h&&w(h,String(a)))},S=e=>{var t;let n=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},k)},f.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:S,onClick:P},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,l.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},2257:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(5488),l=n(5162);const s={sidebar_label:"Quickstart \ud83d\ude80"},i="Quickstart",c={unversionedId:"quickstart",id:"quickstart",title:"Quickstart",description:"Goal",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/quickstart",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/quickstart.md",tags:[],version:"current",frontMatter:{sidebar_label:"Quickstart \ud83d\ude80"},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Core concepts",permalink:"/nango-sync/core-concepts"}},u={},p=[{value:"Step 1: Download &amp; run Nango",id:"step-1-download--run-nango",level:2},{value:"Step 2: Create a new Sync",id:"step-2-create-a-new-sync",level:2},{value:"Step 3: Inspect the synced <del>data</del> Pok\xe9mons",id:"step-3-inspect-the-synced-data-pok\xe9mons",level:2},{value:"That&#39;s it!",id:"thats-it",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Goal"),(0,r.kt)("br",{parentName:"p"}),"\n","Show you Nango in action by syncing a list of all Pok\xe9mons to your local DB ",(0,r.kt)("strong",{parentName:"p"},"in 3 minutes"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Prerequisite"),(0,r.kt)("br",{parentName:"p"}),"\n","Before we dive in, make sure you have a recent version of ",(0,r.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker-desktop/"},"Docker")," installed."),(0,r.kt)("p",null,"Ready? Let's go!"),(0,r.kt)("h2",{id:"step-1-download--run-nango"},"Step 1: Download & run Nango"),(0,r.kt)("p",null,"In a directory of your choice run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/NangoHQ/nango.git\n")),(0,r.kt)("p",null,"And then start Nango:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd nango && docker compose up  # cd nango && docker-compose up if you are on an older version of docker\n")),(0,r.kt)("h2",{id:"step-2-create-a-new-sync"},"Step 2: Create a new Sync"),(0,r.kt)("p",null,"Next we need to tell Nango about our Sync job: Here we want it to fetch the latest details about all Pok\xe9mons from the ",(0,r.kt)("a",{parentName:"p",href:"https://pokeapi.co/"},"Pok\xe9 API")," and sync it to our local database."),(0,r.kt)("p",null,"To do this run the following CURL command in the terminal (we use Nango's REST API here to create a new Sync):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  curl --request POST \\\n    --url http://localhost:3003/v1/syncs \\\n    --header "Content-type: application/json" \\\n    --data \'{"url": "https://pokeapi.co/api/v2/pokemon", "response_path": "results", "paging_url_path":"next", "mapped_table":"pokemons", "frequency":"1 minute"}\'\n')),(0,r.kt)("p",null,"That's it! You have just created your 1st Sync :)"),(0,r.kt)("p",null,"While CURL is great for testing things locally, in your code you will probably prefer using one of our native SDKs to create syncs on the fly (e.g. when a user activates a new native integration)."),(0,r.kt)("p",null,"Here is what the above CURL command looks like with our SDKs:"),(0,r.kt)(o.Z,{groupId:"programming-language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"node",label:"Node SDK",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { Nango } from '@nangohq/node-client';\n\nlet config = {\n    response_path: 'results', // For finding records in the API response.\n    paging_url_path: 'next',  // For finding pagination data in responses.\n    mapped_table: 'pokemons',  // We want the data to be synced to a table called \"pokemons\"\n    frequency: '1 minute' // How often the data is refreshed from the external API.\n};\n\nlet res = await new Nango().sync('https://pokeapi.co/api/v2/pokemon', config);\n\nconsole.log(res.data);\n")))),(0,r.kt)("h2",{id:"step-3-inspect-the-synced-data-pok\xe9mons"},"Step 3: Inspect the synced ",(0,r.kt)("del",{parentName:"h2"},"data")," Pok\xe9mons"),(0,r.kt)("p",null,"The Sync you just created will keep your Pok\xe9mon list up-to-date forever.",(0,r.kt)("br",{parentName:"p"}),"\n","View ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8080/?pgsql=nango-db&username=nango&db=nango&ns=nango&select=pokemons"},"the list of all Pok\xe9mons")," in your local db (password is ",(0,r.kt)("inlineCode",{parentName:"p"},"nango"),")."),(0,r.kt)("h2",{id:"thats-it"},"That's it!"),(0,r.kt)("p",null,"Congratulations, you now have a local copy of all Pok\xe9mons in your database \ud83c\udf89",(0,r.kt)("br",{parentName:"p"}),"\n","It's yours to keep."),(0,r.kt)("p",null,"Whilst this is just a small toy example we hope it has shown you how Nango can create powerful syncs with a single line of code."),(0,r.kt)("p",null,"When you are ready here are some suggestions to get the most out of Nango:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/nango-sync/core-concepts"},"Explore the core concepts")," - our recommended way to get started and learn more about Nango"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nango.dev/slack"},"Join the Slack Community")," and give us feedback on the quickstart & Nango"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/real-world-examples"},"Explore more examples")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/architecture"},"Explore the Architecture")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/contributing"},"Contribute \u2764\ufe0f"))))}m.isMDXComponent=!0}}]);