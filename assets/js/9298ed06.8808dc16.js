"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[361],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,c(c({ref:t},p),{},{components:n})):a.createElement(f,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var i=2;i<o;i++)c[i]=n[i];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9243:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:5,sidebar_label:"Fetch Accounts"},c="Fetch accounts endpoint",l={unversionedId:"fetch-accounts",id:"fetch-accounts",title:"Fetch accounts endpoint",description:"The accounts api offers the following endpoints:",source:"@site/docs/fetch-accounts.md",sourceDirName:".",slug:"/fetch-accounts",permalink:"/fetch-accounts",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/fetch-accounts.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Fetch Accounts"},sidebar:"docsSidebar",previous:{title:"Fetch Contacts",permalink:"/fetch-contacts"},next:{title:"Fetch Opportunities",permalink:"/fetch-opportunities"}},s={},i=[{value:"Fetch all accounts",id:"fetchAccounts",level:2},{value:"Query parameters",id:"query-parameters",level:4},{value:"Fetch a specific account",id:"fetchAccount",level:2},{value:"Path parameters",id:"path-parameters",level:4},{value:"Query parameters",id:"query-parameters-1",level:4}],p={toc:i};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fetch-accounts-endpoint"},"Fetch accounts endpoint"),(0,r.kt)("p",null,"The accounts api offers the following endpoints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#fetchAccounts"},"Fetch all accounts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#fetchAccount"},"Fetch a specific account by id"))),(0,r.kt)("p",null,"For an example of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Account")," object check the examples below."),(0,r.kt)("h2",{id:"fetchAccounts"},"Fetch all accounts"),(0,r.kt)("p",null,"Endpoint: ",(0,r.kt)("inlineCode",{parentName:"p"},"/crm/accounts"),(0,r.kt)("br",{parentName:"p"}),"\n","HTTP Method: ",(0,r.kt)("strong",{parentName:"p"},"GET"),(0,r.kt)("br",{parentName:"p"}),"\n","Headers: API key and user token are mandatory, ",(0,r.kt)("a",{parentName:"p",href:"/basics"},"see API basics"),(0,r.kt)("br",{parentName:"p"}),"\n","Sample call (CURL):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -XGET \\\n-H 'Authorization: Bearer <api-key>' \\\n-H 'X-User-Token: <user-token>' \\\n'https://api.nango.dev/v1/crm/accounts'\n")),(0,r.kt)("h4",{id:"query-parameters"},"Query parameters"),(0,r.kt)("p",null,"The following query parameters are available (all are optional):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"name")," (string): If set only accounts where ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," (the query parameter) appears in the account's ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," property will be returned."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"include_raw")," (boolean): If set to true the response will include the raw original API response of the external system with all fields & data.")),(0,r.kt)("p",null,"Sample response (JSON):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "result": [\n        {\n            "id": "ccc560e4-6bab-41fd-a0cd-fc94d5152de3",\n            "external_id": "3829294",\n            "name": "Great Inc.",\n            "description": "A really great company",\n            "industry": "Developer Tools",\n            "annual_revenue": "10000000",\n            "number_of_employees": "493",\n            "website": "https://greatcorp.com",\n            "contacts": [\n                "f7db1f94-9087-4ba0-aa7d-3ea96e714771"\n            ],\n            "opportunities": [\n                {\n                    "opportunity_id": "4688d404-c31e-41ef-8c27-2536cc50ac32",\n                    "opportunity_stage": "demo",\n                    "opportunity_closed": false\n                }\n            ],\n            "adresses": [\n                {\n                    "street_1": "1379 Lexington Ave",\n                    "street_2": "Golden Gate Park",\n                    "city": "New York",\n                    "state": "NY",\n                    "zip_code": "94122",\n                    "country": "USA",\n                    "address_type": "WORK"\n                }\n            ],\n            "phone_numbers": [\n                {\n                    "phone_number": "+1738929928",\n                    "phone_number_type": "LANDLINE"\n                }\n            ],\n            "last_activity_at": "2022-08-28T08:02:29Z",\n            "external_created_at": "2008-12-10T19:23:18Z",\n            "external_modified_at": "2022-06-07T12:38:28Z",\n            "raw_external_data": {\n                // Raw response with all data as delivered by the external system.\n                // Only provided if "include_raw" is set to true\n            }\n        }\n    ]\n}\n')),(0,r.kt)("h2",{id:"fetchAccount"},"Fetch a specific account"),(0,r.kt)("p",null,"Endpoint: ",(0,r.kt)("inlineCode",{parentName:"p"},"/crm/accounts/:id"),(0,r.kt)("br",{parentName:"p"}),"\n","HTTP Method: ",(0,r.kt)("strong",{parentName:"p"},"GET"),(0,r.kt)("br",{parentName:"p"}),"\n","Headers: API key and user token are mandatory, ",(0,r.kt)("a",{parentName:"p",href:"/basics"},"see API basics"),(0,r.kt)("br",{parentName:"p"}),"\n","Sample call (CURL):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -XGET \\\n-H 'Authorization: Bearer <api-key>' \\\n-H 'X-User-Token: <user-token>' \\\n'https://api.nango.dev/v1/crm/accounts/ccc560e4-6bab-41fd-a0cd-fc94d5152de3'\n")),(0,r.kt)("h4",{id:"path-parameters"},"Path parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},":id")," (string, uuid, required): The ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," property of the account to be returned")),(0,r.kt)("h4",{id:"query-parameters-1"},"Query parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"include_raw")," (boolean): If set to true the response will include the raw original API response of the external system with all fields & data.")),(0,r.kt)("p",null,"Sample response (JSON):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "result": {\n        "id": "ccc560e4-6bab-41fd-a0cd-fc94d5152de3",\n        "external_id": "3829294",\n        "name": "Great Inc.",\n        "description": "A really great company",\n        "industry": "Developer Tools",\n        "annual_revenue": "10000000",\n        "number_of_employees": "493",\n        "website": "https://greatcorp.com",\n        "contacts": [\n            "f7db1f94-9087-4ba0-aa7d-3ea96e714771"\n        ],\n        "opportunities": [\n            {\n                "opportunity_id": "4688d404-c31e-41ef-8c27-2536cc50ac32",\n                "opportunity_stage": "demo",\n                "opportunity_closed": false\n            }\n        ],\n        "adresses": [\n            {\n                "street_1": "1379 Lexington Ave",\n                "street_2": "Golden Gate Park",\n                "city": "New York",\n                "state": "NY",\n                "zip_code": "94122",\n                "country": "USA",\n                "address_type": "WORK"\n            }\n        ],\n        "phone_numbers": [\n            {\n                "phone_number": "+1738929928",\n                "phone_number_type": "LANDLINE"\n            }\n        ],\n        "last_activity_at": "2022-08-28T08:02:29Z",\n        "external_created_at": "2008-12-10T19:23:18Z",\n        "external_modified_at": "2022-06-07T12:38:28Z",\n        "raw_external_data": {\n            // Raw response with all data as delivered by the external system.\n            // Only provided if "include_raw" is set to true\n        }\n    }\n}\n')))}u.isMDXComponent=!0}}]);