"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6879],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9338:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_label:"Local Development",sidebar_position:3},l="Local Development",i={unversionedId:"local-development",id:"local-development",title:"Local Development",description:"Overview",source:"@site/docs/local-development.md",sourceDirName:".",slug:"/local-development",permalink:"/local-development",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/local-development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Local Development",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Architecture",permalink:"/architecture"},next:{title:"Self-Hosted Edition",permalink:"/nango-hosted"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"(OAuth) secrets and local development",id:"secrets",level:2},{value:"OAuth redirects and local development",id:"oauth-redirects-and-local-development",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"local-development"},"Local Development"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Nango is purposely built to optimize your local development experience:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Local development",src:n(4836).Z,width:"2947",height:"1607"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"Nango Folder")," lives in your existing project's repository so you can leverage your usual coding environment."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"Nango Server")," runs locally with Docker, hot-reloading integrations files from the Nango Folder. This lets you run and test integrations as you code.")),(0,o.kt)("p",null,"Nango also provides a CLI to simplify common workflows such as initializing Nango, adding a new Integration or Action etc. "),(0,o.kt)("p",null,"Get started with local development with the ",(0,o.kt)("a",{parentName:"p",href:"/quickstart/node"},"Quickstart"),"."),(0,o.kt)("h2",{id:"secrets"},"(OAuth) secrets and local development"),(0,o.kt)("p",null,"Secrets, such as the ",(0,o.kt)("inlineCode",{parentName:"p"},"oauth_client_secret")," should never be committed to your source code repository. Because of this Nango supports ",(0,o.kt)("a",{parentName:"p",href:"/reference/configuration#integrationsConfig-env_vars"},"environment variable substitution")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"integrations.yaml")," file."),(0,o.kt)("p",null,"In practice this means that any placeholder like ",(0,o.kt)("inlineCode",{parentName:"p"},"${ENV_VAR}")," will be replaced with the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"ENV_VAR")," when the Nango server starts."),(0,o.kt)("p",null,"To make it easy for you to pass these environment variables to the Nango server our default ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," specifies a ",(0,o.kt)("inlineCode",{parentName:"p"},".dev-secrets")," file from which environment variables will be read when the Nango server docker container starts. It is also added to the ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")," so you don't accidentally commit it."),(0,o.kt)("p",null,"To use the ",(0,o.kt)("inlineCode",{parentName:"p"},".dev-secrets")," file navigate to your Nango Folder and create the ",(0,o.kt)("inlineCode",{parentName:"p"},".dev-secrets")," there. You can then add environment variables to it like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="..../nango-integrations/.dev-secrets"',title:'"..../nango-integrations/.dev-secrets"'},'SLACK_CLIENT_SECRET="Your_client_secret"\nHUBSPOT_CLIENT_SECRET="Another_secret"\n')),(0,o.kt)("p",null,"Of course you can also use any other method docker compose supports to pass these environment variables to the Nango server on startup. "),(0,o.kt)("h2",{id:"oauth-redirects-and-local-development"},"OAuth redirects and local development"),(0,o.kt)("p",null,"Nango's builtin OAuth server also works for local development, it will print the current OAuth callback/redirect URL on startup of the server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"info [OAUTH-SERVER] OAuth server started, listening on port 3003. OAuth callback URL: http://localhost:3003/oauth/callback\n")),(0,o.kt)("p",null,"Most OAuth providers force you to register your callback URL(s) with them and luckily many accept ",(0,o.kt)("inlineCode",{parentName:"p"},"http")," for localhost redirects."),(0,o.kt)("p",null,"However, some insist on a redirect that uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"https")," protocol. Because setting up and self-signing a local SSL certificate for localhost is cumbersome and time consuming we don't recommend this method. Instead we recommend that you use a forwarding service like ",(0,o.kt)("a",{parentName:"p",href:"https://ngrok.com/"},"ngrok"),", which provides you with an ",(0,o.kt)("inlineCode",{parentName:"p"},"https")," callback URL that forwards to your localhost."),(0,o.kt)("p",null,"If you use the default Nango OAuth server port (3003) this one-liner will do the trick:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok http 3003\n")),(0,o.kt)("p",null,"Then copy the URL you get under ",(0,o.kt)("inlineCode",{parentName:"p"},"Forwarding")," (it looks something like this: ",(0,o.kt)("inlineCode",{parentName:"p"},"https://a399-51-839-12-66.eu.ngrok.io"),") and add it as the ",(0,o.kt)("a",{parentName:"p",href:"/reference/configuration#nangoConfig-oauth_server_root_url"},(0,o.kt)("inlineCode",{parentName:"a"},"oauth_server_root_url"))," in your nango-config.yaml."))}u.isMDXComponent=!0},4836:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/local-development-68a34fbe41ee24bab83807fe5b2eb5d1.png"}}]);