"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[927],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=c(r),h=o,d=f["".concat(l,".").concat(h)]||f[h]||p[h]||a;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1527:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},i="Architecture & Vision",s={unversionedId:"architecture",id:"architecture",title:"Architecture & Vision",description:"Nango Architecture",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/architecture",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/architecture.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Deploying Nango to production",permalink:"/production-deployment"},next:{title:"License FAQ & Pricing",permalink:"/license-faq"}},l={},c=[{value:"Overview of Nango",id:"overview-of-nango",level:2},{value:"Our vision: Fast &amp; flexible integrations with 3rd party APIs",id:"our-vision-fast--flexible-integrations-with-3rd-party-apis",level:2}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"architecture--vision"},"Architecture & Vision"),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:r(1435).Z},(0,o.kt)("img",{alt:"Nango Architecture",src:r(3572).Z,width:"1598",height:"568"}))),(0,o.kt)("h2",{id:"overview-of-nango"},"Overview of Nango"),(0,o.kt)("p",null,"Nango runs as a cloud service or a group of self-hosted docker containers (see ",(0,o.kt)("a",{parentName:"p",href:"/production-deployment"},"deploying Nango to production"),")."),(0,o.kt)("p",null,"The main way you interact with Nango from your application is the Nango SDK or REST API: With these APIs you can create new Syncs, query the status of Syncs, remove Syncs or (in the future) subscribe to updates from Syncs."),(0,o.kt)("p",null,"Once you added a Sync to Nango it takes care of all the annoying details for you to sync the data out to your local database:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nango performs full refreshes on first sync"),(0,o.kt)("li",{parentName:"ul"},"Nango performs periodic incremental refreshes"),(0,o.kt)("li",{parentName:"ul"},"Nango de-duplicates the data and upserts (update existing record or insert a new one) it for you into the existing table(s) as needed"),(0,o.kt)("li",{parentName:"ul"},"Nango monitors the sync jobs and automatically restarts jobs that are stuck, handles rate-limits etc."),(0,o.kt)("li",{parentName:"ul"},"Nango alerts you if something goes wrong that requires your attention, e.g. major schema changes, unfixable authentication errors etc.")),(0,o.kt)("h2",{id:"our-vision-fast--flexible-integrations-with-3rd-party-apis"},"Our vision: Fast & flexible integrations with 3rd party APIs"),(0,o.kt)("p",null,"Nango exists because we believe it should be fast and easy for every software to integrate itself with 3rd party APIs - without any compromise on what you can with the API."),(0,o.kt)("p",null,"Today writing these integrations forces engineering teams to rebuild the same infrastructure over an over again: OAuth, pagination, retries, rate-limits, fair queues, change detection, upserts, schema mappings etc.\nMany of the teams we talked to built internal frameworks to abstract these integrations away and avoid duplicate code."),(0,o.kt)("p",null,"With Nango our ",(0,o.kt)("strong",{parentName:"p"},"aim is to provide the best tooling for engineers to work with 3rd party APIs"),".",(0,o.kt)("br",{parentName:"p"}),"\n","All of our tools will follow the same philosophy:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"API agnostic (we will never have API specific parts in the core tools that would limit which APIs they work with)"),(0,o.kt)("li",{parentName:"ul"},"Focused (they solve one problem, but solve this well)"),(0,o.kt)("li",{parentName:"ul"},"Easy to compose (when you want to use them together they will be natural team players)"),(0,o.kt)("li",{parentName:"ul"},"Simple abstractions, powerful options (our tools are easy to reason about and get started, but offer endless possibilities for power users)")),(0,o.kt)("p",null,"We want to enable you to build deep and powerful integrations with ease that make full use of the power of the external API."),(0,o.kt)("p",null,"Nango Sync is our first step towards this vision. But we will not stop here and look forward to expanding our palette of tools in the near future."))}p.isMDXComponent=!0},1435:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/files/nango-architecture-f2628349fef05669a7a8c59ef39a3c3f.png"},3572:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/nango-architecture-f2628349fef05669a7a8c59ef39a3c3f.png"}}]);