"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=u(n),d=r,m=g["".concat(s,".").concat(d)]||g[d]||p[d]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5304:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"Create an Integration",sidebar_position:1},o="Create an Integration",l={unversionedId:"guides/create-an-integration",id:"guides/create-an-integration",title:"Create an Integration",description:"This guide walks you through how to create a new Integration in Nango. If you are not familiar with what an Integration is, please take a look at the Architecture doc first.",source:"@site/docs/guides/create-an-integration.md",sourceDirName:"guides",slug:"/guides/create-an-integration",permalink:"/guides/create-an-integration",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/guides/create-an-integration.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Create an Integration",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Guides",permalink:"/category/guides"},next:{title:"Create an Action",permalink:"/guides/create-an-action"}},s={},u=[{value:"Adding a new Integration",id:"adding-a-new-integration",level:2},{value:"Next steps",id:"next-steps",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-an-integration"},"Create an Integration"),(0,r.kt)("p",null,"This guide walks you through how to create a new Integration in Nango. If you are not familiar with what an Integration is, please take a look at the ",(0,r.kt)("a",{parentName:"p",href:"/architecture"},"Architecture")," doc first."),(0,r.kt)("h2",{id:"adding-a-new-integration"},"Adding a new Integration"),(0,r.kt)("p",null,"In a new terminal, navigate to the Nango Folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd <your-project-root>/nango-integrations\n")),(0,r.kt)("p",null,"Choose a name for your integration (e.g. 'slack', 'salesforce', etc.), it is a best practice to use the name of the external api/product in all lowercase letters and without whitespaces. The integration's name must be unique amongst all the integrations in your Nango Folder. For the guide here we will use ",(0,r.kt)("inlineCode",{parentName:"p"},"myintegration"),"."),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"integrations.yaml")," file and copy/paste the configuration for a new Integration under the ",(0,r.kt)("inlineCode",{parentName:"p"},"integrations")," key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="integrations.yaml"',title:'"integrations.yaml"'},"- myintegration:\n    base_url: https://myintegration.com/api/\n    call_auth:\n        mode: AUTH_HEADER_TOKEN\n    log_level: debug\n")),(0,r.kt)("p",null,"Let's briefly unwrap each of these fields (check the ",(0,r.kt)("a",{parentName:"p",href:"/reference/configuration#integrationsYaml"},"reference")," for details): "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"myintegration")," is the name of your integration in Nango, you will use this string to reference it everywhere"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"base_url")," is the 3rd-party API's base URL to be used for http requests"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"call_auth: mode:")," setting this to ",(0,r.kt)("inlineCode",{parentName:"li"},"AUTH_HEADER_TOKEN")," tells Nango to add a standard Bearer token to every HTTP header to authorize your requests"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"log_level")," indicates how verbose we want Nango's logs for this integration to be. ",(0,r.kt)("inlineCode",{parentName:"li"},"debug")," is best for development to have maximum visibility and will log, amongst other things, every HTTP request we make from the integration (cf. ",(0,r.kt)("a",{parentName:"li",href:"/reference/logging"},"log levels"),").")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Take a look at the ",(0,r.kt)("a",{parentName:"p",href:"/quickstart/node#create-an-integration"},"Quickstart")," for a real-life example of this configuration for the Slack API. If you are unsure how to configure your API here we are happy to help you out in the ",(0,r.kt)("a",{parentName:"p",href:"https://nango.dev/slack"},"community Slack"),"!")),(0,r.kt)("p",null,"Create a directory called ",(0,r.kt)("inlineCode",{parentName:"p"},"myintegration")," directly under the ",(0,r.kt)("inlineCode",{parentName:"p"},"nango-integrations")," folder to host the code for your new Integration. In the Nango Folder, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir myintegration\n")),(0,r.kt)("p",null,"Note that the Integration name in ",(0,r.kt)("inlineCode",{parentName:"p"},"integrations.yaml")," must match the Integration folder name, otherwise the Nango server will be unable to load this integration."),(0,r.kt)("h2",{id:"next-steps"},"Next steps"),(0,r.kt)("p",null,"That's it, you successfully added a new Integration to Nango \ud83c\udf89"),(0,r.kt)("p",null,"As a next step, you probably want to ",(0,r.kt)("a",{parentName:"p",href:"/guides/create-an-action"},"add an action")," to your Integration so it can interact with the external API."))}p.isMDXComponent=!0}}]);