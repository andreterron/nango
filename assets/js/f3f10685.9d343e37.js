"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1172],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(r),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1196:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"Copper"},i="Blueprint: Copper",p={unversionedId:"blueprint-catalog/blueprint-copper",id:"blueprint-catalog/blueprint-copper",title:"Blueprint: Copper",description:"This blueprint of Nango for the Copper API makes it very easy to work with the Copper REST API and automates common tasks such as OAuth 2 authentication, requests authorization, logging, rate-limit handling, error handling and automatic retries.",source:"@site/docs/blueprint-catalog/blueprint-copper.md",sourceDirName:"blueprint-catalog",slug:"/blueprint-catalog/blueprint-copper",permalink:"/blueprint-catalog/blueprint-copper",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/main/docs/docs/blueprint-catalog/blueprint-copper.md",tags:[],version:"current",frontMatter:{sidebar_label:"Copper"},sidebar:"docsSidebar",previous:{title:"Close",permalink:"/blueprint-catalog/blueprint-close"},next:{title:"Discord",permalink:"/blueprint-catalog/blueprint-discord"}},l={},s=[{value:"How to use it",id:"how-to-use-it",level:2},{value:"Coverage",id:"coverage",level:3},{value:"Copper API gotchas &amp; learnings",id:"gotchas",level:2}],u={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"blueprint-copper"},"Blueprint: Copper"),(0,a.kt)("p",null,"This blueprint of Nango for the Copper API makes it very easy to work with the Copper REST API and automates common tasks such as OAuth 2 authentication, requests authorization, logging, rate-limit handling, error handling and automatic retries."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.copper.com/"},"Copper REST API Docs"),"  |  ",(0,a.kt)("a",{parentName:"p",href:"#gotchas"},"API gotchas & learnings")),(0,a.kt)("p",null,"Last updated: 12.08.2022"),(0,a.kt)("h2",{id:"how-to-use-it"},"How to use it"),(0,a.kt)("p",null,"To create your own integration based on the Copper blueprint add this to your ",(0,a.kt)("inlineCode",{parentName:"p"},"integrations.yaml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=integrations.yaml",title:"integrations.yaml"},"    copper:\n        extends_blueprint: copper:v0\n\n")),(0,a.kt)("p",null,"The Copper API uses a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.copper.com/introduction/authentication.html/"},"User's email plus an api key as password for authorization"),". The API key can be generated by your user in Copper and should then be supplied to your frontend together with that user's Copper e-mail address. Once you have it you can register the user's Connection in Nango with a call to ",(0,a.kt)("a",{parentName:"p",href:"/reference/SDKs/node#registerConnection"},(0,a.kt)("inlineCode",{parentName:"a"},"registerConnection"))," like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="In your backend, using the Nango SDK"',title:'"In',your:!0,"backend,":!0,using:!0,the:!0,Nango:!0,'SDK"':!0},"\nlet credentials = {\n    username: '<E-Mail of the user from your frontend/user>',\n    password: '<Copper API Key from your frontend/user>'\n};\n\nawait nango.registerConnection('copper', '<user-id>', credentials);\n// Connection registered, you can now start executing Copper actions for this user\n")),(0,a.kt)("h3",{id:"coverage"},"Coverage"),(0,a.kt)("p",null,"Blueprint ",(0,a.kt)("inlineCode",{parentName:"p"},"v0")," covers the Copper REST API."),(0,a.kt)("p",null,"The base URL for API calls is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"https://api.copper.com/developer_api/")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Nango Feature"),(0,a.kt)("th",{parentName:"tr",align:null},"Supported Status"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Rate limit detection"),(0,a.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Retries on timeout"),(0,a.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Use any endpoint of the Copper Harvest API"),(0,a.kt)("td",{parentName:"tr",align:null},"\u2705")))),(0,a.kt)("h2",{id:"gotchas"},"Copper API gotchas & learnings"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"These are community contributed field notes about working with this API. We hope they help you!")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nothing here yet, add yours!")),(0,a.kt)("admonition",{title:"Share your experience",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Learned something about working with the Copper API that you want to share with other developers? ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/NangoHQ/nango/edit/main/docs/docs/blueprint-catalog/blueprint-copper.md"},"Add it to this page")," (it is just a markdown file) and send us a pull request. Thanks so much!")))}c.isMDXComponent=!0}}]);